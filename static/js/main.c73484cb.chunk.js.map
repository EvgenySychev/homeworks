{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h5-rrd-v6/Header.tsx","p2-homeworks/h5-rrd-v6/pages/Error404.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5-rrd-v6/pages/PreJunior.tsx","p2-homeworks/h5-rrd-v6/pages/Junior.tsx","p2-homeworks/h5-rrd-v6/pages/Junior+.tsx","p2-homeworks/h5-rrd-v6/Pages.tsx","p2-homeworks/h5-rrd-v6/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Header","Error404","Message","props","className","s","message","src","avatar","alt","angle","content","name","text","time","messageData","HW1","Affair","onClick","deleteAffairCallback2","affair","_id","console","log","priority","Affairs","mappedAffairs","data","map","a","key","deleteAffairCallback1","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","t","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","inputClass","value","onChange","someClass","GreetingContainer","users","addUserCallback","setName","setError","length","e","currentTarget","alert","HW3","setUsers","SuperInputText","type","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","superInput","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","setText","showAlert","setChecked","column","testSpanError","blue","disabled","PreJunior","Junior","JuniorPlus","PATH","Pages","path","element","to","HW5","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.c73484cb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__2nc27\",\"avatar\":\"Message_avatar__3RBih\",\"content\":\"Message_content__-AG4V\",\"angle\":\"Message_angle__3s5Ht\",\"text\":\"Message_text__h-8uR\",\"name\":\"Message_name__1i01b\",\"time\":\"Message_time__2DRHm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__1V2ex\",\"errorInput\":\"SuperInputText_errorInput__3GnHE\",\"error\":\"SuperInputText_error__1LvZJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__JNsj4\",\"column\":\"HW4_column__2Kd5u\",\"testSpanError\":\"HW4_testSpanError__2TLtg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__2hYpq\",\"error\":\"Greeting_error__2XSQW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__2MDYI\",\"red\":\"SuperButton_red__1NRhq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__-mQbR\",\"spanClassName\":\"SuperCheckbox_spanClassName__294tx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1Flrn\"};","import React from 'react'\nimport {NavLink} from \"react-router-dom\";\n\nfunction Header() {\n    return (\n        <div>\n            // add NavLinks\n\n        </div>\n    )\n}\n\nexport default Header\n","import React from 'react'\n\nfunction Error404() {\n    return (\n        <div>\n            <div>404</div>\n            <div>Page not found!</div>\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\n        </div>\n    )\n}\n\nexport default Error404\n","import React from 'react'\nimport s from './Message.module.css'\n\ntype MessagePropsType = {\n    avatar: string,\n    name: string,\n    message: string,\n    time: string\n\n}\n\nfunction Message(props: MessagePropsType) {\n    return (\n        <div className={s.message}>\n            <img src= {props.avatar} alt = {'avatar'} className={s.avatar} />\n\n            <div className={s.angle}/>\n\n            <div className={s.content}>\n                <div className={s.name}>{props.name}</div>\n                <div className={s.text}>{props.message}</div>\n                <div className={s.time}>{props.time}</div>\n\n            </div>\n\n        </div>\n    )\n}\n\nexport default Message;","import React from 'react'\n\nimport Message from \"./Message\";\n\nconst messageData = {\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n    name: 'Artem',\n    message: 'npm start нажимал?',\n    time: '22:00',\n}\n\n\nfunction HW1() {\n    return (\n        <div>\n            <hr/>\n            homeworks 1\n\n            {/*should work (должно работать)*/}\n\n            <Message\n                avatar={messageData.avatar}\n                name={messageData.name}\n                message={messageData.message}\n                time={messageData.time}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeMessage/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW1","import React from 'react'\nimport {AffairType} from \"./HW2\";\n\ntype AffairPropsType = {\n    // key не нужно типизировать\n    affair: AffairType\n    deleteAffairCallback2: (_id: number) => void\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = () => {\nprops.deleteAffairCallback2(props.affair._id)\n        console.log('this is button X')\n    }\n\n    return (\n        <div>\n            <button onClick={deleteCallback}>X</button>\n            {props.affair.name}  {props.affair.priority}\n\n        </div>\n    )\n}\n\nexport default Affair\n","import React from 'react'\nimport Affair from './Affair'\nimport {AffairType, FilterType} from './HW2'\n\ntype AffairsPropsType = {\n    data: Array<AffairType>\n    setFilter: (filter:FilterType) => void\n    deleteAffairCallback1: (_id: number) => void\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback2={props.deleteAffairCallback1}\n        />\n    ))\n\n    const setAll = () => {\n    props.setFilter('all')\n        console.log('this is button All')\n\n    } // need to fix\n    const setHigh = () => {\n        props.setFilter('high')\n        console.log('this is button High')\n    }\n    const setMiddle = () => {\n        props.setFilter('middle')\n        console.log('this is button Middle')\n    }\n    const setLow = () => {\n        props.setFilter('low')\n        console.log('this is button Low')\n    }\n\n    return (\n        <div>\n\n            {mappedAffairs}\n\n            <button onClick={setAll}>All</button>\n            <button onClick={setHigh}>High</button>\n            <button onClick={setMiddle}>Middle</button>\n            <button onClick={setLow}>Low</button>\n        </div>\n    )\n}\n\nexport default Affairs\n","import React, {useState} from 'react'\nimport Affairs from './Affairs'\n\n// types\nexport type AffairPriorityType = 'high'| 'low' |'middle'\nexport type AffairType = {\n    _id : number\n    name: string\n    priority: string\n}\nexport type FilterType = 'all' | AffairPriorityType\n\n// constants\nconst defaultAffairs: Array<AffairType> = [\n    {_id: 1, name: 'React', priority: 'high'},\n    {_id: 2, name: 'anime', priority: 'low'},\n    {_id: 3, name: 'games', priority: 'low'},\n    {_id: 4, name: 'work', priority: 'high'},\n    {_id: 5, name: 'html & css', priority: 'middle'},\n]\n\n// pure helper functions\n\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => {\n    if (filter === 'high') return affairs.filter(t => t.priority === 'high')\n    if (filter === 'middle') return affairs.filter(t => t.priority === 'middle')\n    if (filter === 'low') return affairs.filter(t => t.priority === 'low')\n    return affairs\n}\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => {\n    return affairs.filter(t => t._id !== _id)\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs)\n    const [filter, setFilter] = useState<FilterType>('all')\n\n    const filteredAffairs = filterAffairs(affairs, filter)\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id))\n\n\n    return (\n        <div>\n            <hr/>\n            homeworks 2\n\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback1={deleteAffairCallback}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW2\n","import React, {ChangeEvent} from 'react'\nimport s from './Greeting.module.css'\n\ntype GreetingPropsType = {\n    name: string\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void\n    addUser: () => void\n    error: string\n    totalUsers: number\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\n) => {\n    let inputClass = error ? s.error : ''\n    return (\n        <div>\n            <input value={name} onChange={setNameCallback} className={inputClass}/>\n            <button onClick={addUser}>add</button>\n            <span>{totalUsers}</span>\n            <div>\n                <span className={s.someClass}>{error}</span>\n            </div>\n\n\n        </div>\n    )\n}\n\nexport default Greeting\n","import React, {ChangeEvent, useState} from 'react'\nimport Greeting from './Greeting'\nimport {UserType} from \"./HW3\";\n\ntype GreetingContainerPropsType = {\n    users: Array<UserType>\n    addUserCallback: (name: string) => void\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>('')\n    const [error, setError] = useState<string>('')\n\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        setError('')\n        setName(e.currentTarget.value)\n    }\n    const addUser = () => {\n\n        if (name !== '') {\n            alert(`Hello ${name} !`)\n            setName('')\n            addUserCallback(name)\n            setError('')\n        } else {\n            setError(\"Name can't be empty\")\n        }\n    }\n\n    const totalUsers = users.length\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n        />\n    )\n}\n\nexport default GreetingContainer\n","import React, {useState} from 'react'\nimport GreetingContainer from './GreetingContainer'\n\n// types\nexport type UserType = {\n    _id: string\n    name: string\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<any>([]) // need to fix any\n\n    const addUserCallback = (name: string) => {\n\n        setUsers([...users, name])\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 3\n\n            {/*should work (должно работать)*/}\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW3\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${s.errorInput} ${className ? s.superInput : ''}`\n\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        if (onChangeChecked) {\n            onChangeChecked(e.currentTarget.checked)\n        }\n\n\n        // сделайте так чтоб работал onChange и onChangeChecked\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ChangeEvent, useState} from 'react'\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\nimport s from './HW4.module.css'\nimport SuperButton from './common/c2-SuperButton/SuperButton'\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\n\nfunction HW4() {\n    const [text, setText] = useState<string>('')\n    const error = text ? '' : 'error'\n\n    const showAlert = () => {\n        if (error) {\n            alert('введите текст...')\n        } else {\n            alert(text) // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false)\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    spanClassName={s.testSpanError}\n                />\n\n                <SuperInputText\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n\n                {/*----------------------------------------------------*/}\n\n                <SuperButton>\n                    default\n                </SuperButton>\n\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                <SuperButton disabled>\n                    disabled\n                </SuperButton>\n\n                {/*----------------------------------------------------*/}\n\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW4\n","import React from 'react'\nimport HW1 from '../../h1/HW1'\nimport HW2 from '../../h2/HW2'\nimport HW3 from '../../h3/HW3'\nimport HW4 from '../../h4/HW4'\n\nfunction PreJunior() {\n    return (\n        <div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            {/*<HW6/>*/}\n\n        </div>\n    )\n}\n\nexport default PreJunior\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from 'react'\n\nfunction Junior() {\n    return (\n        <div>\n            {/*<HW7/>\n            <HW8/>\n            <HW9/>\n            <HW10/>\n            <HW11/>\n            <HW12/>*/}\n            Junior\n        </div>\n    )\n}\n\nexport default Junior\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from 'react'\n\nfunction JuniorPlus() {\n    return (\n        <div>\n            {/*<HW13/>\n            <HW14/>\n            <HW15/>\n            <HW10/>\n            <HW11/>\n            <HW12/>*/}\n            Junior+\n        </div>\n    )\n}\n\nexport default JuniorPlus\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from 'react'\nimport Error404 from \"./pages/Error404\";\nimport PreJunior from \"./pages/PreJunior\";\nimport {Routes,Route,Navigate} from \"react-router-dom\";\nimport Junior from \"./pages/Junior\";\nimport JuniorPlus from \"./pages/Junior+\";\n\n\nexport const PATH = {\n    PRE_JUNIOR: '/pre-junior',\n    JUNIOR: '/junior',\n    JUNIOR_PLUS: '/junior-plus',\n    }\n\nfunction Pages() {\n    return (\n        <div>\n            {/*Routes выбирает первый подходящий роут*/}\n            <Routes>\n\n                {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\n                <Route path={'/'} element={<Navigate to={PATH.PRE_JUNIOR}/>}/>\n\n                <Route path={PATH.PRE_JUNIOR} element={<PreJunior/>}/>\n                <Route path={PATH.JUNIOR} element={<Junior/>}/>\n                <Route path={PATH.JUNIOR_PLUS} element={<JuniorPlus/>}/>\n                <Route path={'/*'} element={<Error404/>}/>\n\n            </Routes>\n        </div>\n    )\n}\n\nexport default Pages\n","import React from 'react'\nimport Header from './Header'\nimport Pages from './Pages'\nimport {HashRouter} from \"react-router-dom\";\n\nfunction HW5() {\n    return (\n        <div>\n            {/*в gh-pages лучше работает HashRouter*/}\n            <HashRouter>\n\n            <Header/>\n\n            <Pages/>\n\n            </HashRouter>\n        </div>\n    )\n}\n\nexport default HW5\n","import React from 'react'\nimport s from './App.module.css'\nimport HW5 from \"../../../p2-homeworks/h5-rrd-v6/HW5\";\n\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <div>react homeworks:</div>\n            {/*<HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>*/}\n            <HW5/>\n\n        </div>\n    );\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}